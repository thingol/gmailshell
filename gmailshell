#!/usr/bin/env python
__author__  = 'Marius HÃ¥rstad Bauer-Kjerkreit'
__program__ = 'GMailShell'
__version__ = '0.0.0a0'

import cmd
import httplib2


class GmailConnection:
    __client_id = None
    __client_sec = None
    __config_folder = None
    __conn = None

    def __init__(self, config_folder):
        self.__config_folder = config_folder
        self._load_config()
        self._connect()

    def _connection(self):
        import os
        from apiclient import discovery
        from argparse import ArgumentParser
        from oauth2client import client, file, tools
        from oauth2client.client import OAuth2WebServerFlow
        from oauth2client.tools import run_flow

        flags = ArgumentParser(parents=[tools.argparser]).parse_args()
        credential_path = os.path.join(self.__config_folder, 'credentials')

        store = file.Storage(credential_path)
        credentials = store.get()
        if not credentials or credentials.invalid:
            credentials = run_flow(
                OAuth2WebServerFlow(
                    client_id=self.__client_id,
                    client_secret=self.__client_sec,
                    scope=['https://www.googleapis.com/auth/gmail'],
                    user_agent=__program__ + '/' + __version__),
                store, flags)
            print('Storing credentials: ' + credential_path)
        http = credentials.authorize(httplib2.Http())

        self.__conn = discovery.build('', 'v3', http=http)

    def _load_config(self):
        import sys
        from os.path import exists, expanduser, join
        from configparser import ConfigParser

        cfg_file = self.__config_folder + '/config'

        if not exists(self.__config_folder):
            print('config dir does not exist: ' + self.__config_folder)
            sys.exit(0)
        else:
            if not exists(cfg_file):
                print('missing config file "' + cfg_file + '"' + '\nplease create...')
                sys.exit(1)
            else:
               cfg = ConfigParser()
            cfg.read(cfg_file)
            self.__client_id = cfg['auth']['client_id']
            self.__client_sec = cfg['auth']['client_sec']
    

class GMailShell(cmd.Cmd):
    intro = Fore.RESET + '\nWelcome to GMailShell. Type "help" for help.\n'
    prompt = 'GMail> '

    #
    # overrides
    #
    def default(self, line):
        print('Unknown command: {0}'.format(line))

    def do_EOF(self, line):
        print('')
        return True

    def emptyline(self):
        pass

    def preloop(self):
        pass

    #
    # commands
    #
    def do_debug(self, line):
        pass
    

    def do_quit(self, line):
        return True

    def do_exit(self, line):
        return True


if __name__ == '__main__':
    GMailShell().cmdloop()
